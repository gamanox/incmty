<!DOCTYPE html>
<html>
<head>
  <title>Incmty</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <script type="text/paperscript" canvas="canvas">
    var raster = new Raster('profile');

// Hide the raster:
raster.visible = false;

// The size of our grid cells:
var gridSize = 15;

// Space the cells by 120%:
var spacing = .5;

// As the web is asynchronous, we need to wait for the raster to load
// before we can perform any operation on its pixels.
raster.on('load', function() {
  // Since the example image we're using is much too large,
  // and therefore has way too many pixels, lets downsize it to
  // 40 pixels wide and 30 pixels high:
  raster.size = new Size(25, 25);

  for (var y = 0; y < raster.height; y++) {
    for(var x = 0; x < raster.width; x++) {
      // Get the color of the pixel:
      var color = raster.getPixel(x, y);

      // Create a circle shaped path:
      var triangle = new Path.RegularPolygon(new Point(x, y) * gridSize, 3, gridSize / 2 / spacing);
      
      

      // var path = new Path.Circle({
      //   center: new Point(x, y) * gridSize,
      //   radius: gridSize / 2 / spacing
      // });

      // Set the fill color of the path to the color
      // of the pixel:
      triangle.fillColor = color;
    }
  }

  // Move the active layer to the center of the view, so all 
  // the created paths in it appear centered.
  project.activeLayer.position = view.center;
});

// Move the active layer to the center of the view:
project.activeLayer.position = view.center;
  </script>
  <script type="text/paperscript" canvas="canvas2">
// Create a raster item using the image tag with id='mona'
var raster = new Raster('profile2');
// Move the raster to the center of the view
raster.position = view.center;
raster.size = new Size(400, 400);

// Set the opacity of the raster to 10%, so we can see
// the colored paths on top more clearly:
raster.opacity = 0.1;

// The onMouseMove event is fired in increments of 25 pts:
tool.fixedDistance = 25;

function onMouseMove(event) {
  // Create a circle shaped path with its center point
  // at the point in the middle between the current mouse
  // position and the position when the last onMouseDrag
  // event was fired:
  // var path = new Path.Circle({
  //   center: event.middlePoint,
  //   radius: 12.5,
  //   strokeColor: 'white'
  // });
  var triangle = new Path.RegularPolygon(event.middlePoint, 3, 12.5);
  
  // Get the average color of the pixels that fall within
  // the shape of the path:
  triangle.fillColor = raster.getAverageColor(triangle);
}
  </script>
</head>
<body>
<div id="user-widget">

  <% if current_user %>

    Welcome <strong><%= current_user.name %></strong>!

    <%= link_to "Sign out", signout_path, id: "sign_out" %>
    
    

  <% else %>

    <%= link_to "Sign in with Facebook", "/auth/facebook", id: "sign_in" %>

  <% end %>

</div>

<%= yield %>
  <%= image_tag("profile.jpg", :id=>"profile") %>

<canvas id='canvas'>
    </canvas>
  <%= image_tag("profile2.jpg", :id=>"profile2") %>

<canvas id='canvas2'>
    </canvas>
</body>
</html>
